								
								
																		Git查看提交历史日志
																		
-Git log主要参数说明
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	选项									说明													示例										示例说明
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	无						按提交时间列出所有的更新,最近的更新排在最上面			# git  log											显示所有历史信息,后提交的前面
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	-p						按补丁格式显示每个更新之间的差异						# git  log   -p
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--stat					仅显示简要的增改行数统计								# git  log	 --stat
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--shortstat				只显示 --stat 中最后的行数修改添加移除统计
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--name-only				仅在提交信息后显示已修改的文件清单
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--name-status			显示新增、修改、删除的文件清单
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--abbrev-commit			仅显示 SHA-1 的前几个字符,而非所有的 40 个字符
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--relative-date			使用较短的相对时间显示（比如,"2 weeks ago"）
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--graph					显示 ASCII 图形表示的分支合并历史
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	-(n)					仅显示最近的 n 条提交								# git  log   -p    -3 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--since, --after		仅显示指定时间之后的提交								# git  log  --since=2.hour							可设置"X.days X.minutes X.month X.years"		
																			# git  log  --since="2008-10-01" 								
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--until, --before		仅显示指定时间之前的提交
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--author				仅显示指定作者相关的提交								# git log --author=ldl609
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--committer				仅显示指定提交者相关的提交							# git log --committer=ldl609
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--grep					仅显示含指定关键字的提交								# git  log  --grep=”XXXX”        					搜索提交说明中的关键字
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	-S						仅显示添加或移除了某个关键字的提交
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--pretty				使用其他格式显示历史提交信息.可用的选项包括oneline,		# git  log  --pretty=oneline        				将每个提交放在一行显示
							short,full,fuller和format（后跟指定格式）			# git  log 	--pretty=format:"%h-%an,%ar:%s"			定制要显示的记录格式,具体格式选项参考下表
																			# git  log  --pretty="%h - %s"
----------------------------------------------------------------------------------------------------------------------------------------------------------------------



-format格式选项说明:
------------------------------------------------------------------------  ------------------------------------------------------------------------
	选项								选项说明										选项									选项说明
------------------------------------------------------------------------  ------------------------------------------------------------------------
    %H 					提交对象（commit）的完整哈希字串								%s 						提交说明
------------------------------------------------------------------------  ------------------------------------------------------------------------
	%h 					提交对象的简短哈希字串										%cr 					提交日期，按多久以前的方式显示
------------------------------------------------------------------------  ------------------------------------------------------------------------
    %T 					树对象（tree）的完整哈希字串									%cd 					提交日期
------------------------------------------------------------------------  ------------------------------------------------------------------------
    %t 					树对象的简短哈希字串										%ce 					提交者的电子邮件地址
------------------------------------------------------------------------  ------------------------------------------------------------------------
    %P 					父对象（parent）的完整哈希字串								%cn 					提交者(committer)的名字
------------------------------------------------------------------------  ------------------------------------------------------------------------
    %p 					父对象的简短哈希字串										%ar 					作者修订日期，按多久以前的方式显示
------------------------------------------------------------------------  ------------------------------------------------------------------------
    %an 				作者（author）的名字										%ad 					作者修订日期（可以用 -date= 选项定制格式）
------------------------------------------------------------------------  ------------------------------------------------------------------------
    %ae 				作者的电子邮件地址
------------------------------------------------------------------------  ------------------------------------------------------------------------

















